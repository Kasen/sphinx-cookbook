#! /bin/bash
# CREATED BY CHEF - local changes will be crushed
#
# Put files to be included in <%= @conf_dir %>/conf.d
#
# Includes named .sh will be included via .
# Includes named .txt will be included via cat
# All other includes will be executed

shopt -s nullglob

cat <<EOT
searchd {
  <% node[:sphinx][:searchd][:listen].each do |listen| %>
  listen = <%= listen %>
  <% end %>
  log = <%= @log_dir %>/searchd.log
  query_log = <%= @log_dir %>/query.log
  pid_file = <%= @run_dir %>/searchd.pid
  read_timeout = <%= node[:sphinx][:searchd][:read_timeout] %>
  client_timeout = <%= node[:sphinx][:searchd][:client_timeout] %>
  max_children = <%= node[:sphinx][:searchd][:max_children] %>
  max_matches = <%= node[:sphinx][:searchd][:max_matches] %>
  query_log_format = <%= node[:sphinx][:searchd][:query_log_format] %>
  rt_flush_period = <%= node[:sphinx][:searchd][:rt_flush_period] %>
  seamless_rotate = <%= node[:sphinx][:searchd][:seamless_rotate] %>
  preopen_indexes = <%= node[:sphinx][:searchd][:preopen_indexes] %>
  unlink_old = <%= node[:sphinx][:searchd][:unlink_old] %>
  attr_flush_period = <%= node[:sphinx][:searchd][:attr_flush_period] %>
  max_packet_size = <%= node[:sphinx][:searchd][:max_packet_size] %>
  mva_updates_pool = <%= node[:sphinx][:searchd][:mva_updates_pool] %>
  max_filters = <%= node[:sphinx][:searchd][:max_filters] %>
  max_filter_values = <%= node[:sphinx][:searchd][:max_filter_values] %>
  listen_backlog = <%= node[:sphinx][:searchd][:listen_backlog] %>
  read_buffer = <%= node[:sphinx][:searchd][:read_buffer] %>
  read_unhinted = <%= node[:sphinx][:searchd][:read_unhinted] %>
  max_batch_queries = <%= node[:sphinx][:searchd][:max_batch_queries] %>
  subtree_docs_cache = <%= node[:sphinx][:searchd][:subtree_docs_cache] %>
  subtree_hits_cache = <%= node[:sphinx][:searchd][:subtree_hits_cache] %>
  workers = <%= node[:sphinx][:searchd][:workers] %>
  dist_threads = <%= node[:sphinx][:searchd][:dist_threads] %>
  binlog_flush = <%= node[:sphinx][:searchd][:binlog_flush] %>
  binlog_max_log_size = <%= node[:sphinx][:searchd][:binlog_max_log_size] %>
  collation_server = <%= node[:sphinx][:searchd][:collation_server] %>
  collation_libc_locale = <%= node[:sphinx][:searchd][:collation_libc_locale] %>
  thread_stack = <%= node[:sphinx][:searchd][:thread_stack] %>
  expansion_limit = <%= node[:sphinx][:searchd][:expansion_limit] %>
  watchdog = <%= node[:sphinx][:searchd][:watchdog] %>
  binlog_path = <%= @data_dir %>
}
EOT

cat <<EOT
indexer {
  mem_limit = <%= node[:sphinx][:indexer][:mem_limit] %>
  max_iops = <%= node[:sphinx][:indexer][:max_iops] %>
  max_iosize = <%= node[:sphinx][:indexer][:max_iosize] %>
  max_xmlpipe2_field = <%= node[:sphinx][:indexer][:max_xmlpipe2_field] %>
  write_buffer = <%= node[:sphinx][:indexer][:write_buffer] %>
  max_file_field_buffer = <%= node[:sphinx][:indexer][:max_file_field_buffer] %>
  on_file_field_error = <%= node[:sphinx][:indexer][:on_file_field_error] %>
}
EOT


for include in <%= @conf_dir %>/conf.d/*
do
    if [ ${include##*.} == "sh" ] ; then
        . $include
    elif [ ${include##*.} == "txt" ] ; then
        cat $include
    else
        $include
    fi
done
